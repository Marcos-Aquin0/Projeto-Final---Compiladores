
int processos[ 10 ]; 
int processoAtual; 
int processosCarregados; 
int programas [ 10 ];

void mapearProcesso(int proc[]){
    int i;
    int desvio;
    i = 0;
    desvio = 1001;
    while(i<10){
        proc[i] = desvio;
        desvio = desvio + 200;
        i = i+1;    
    }
}

void mapearProgramas(int prog[]){
    int i;
    i = 0;
    while(i<10){
        prog[i] = i;
        i = i+1;    
    }
    i = 0;
    nop();
}

int menuShell(){
    int opcao;
    msgLcd(16);
    opcao = input();
    return opcao;
}

void main(void){
    int salto;
    int opcao;
    int i;
    int teste;
    int podeRodar;

    mapearProcesso(processos);
    mapearProgramas(programas);
    processoAtual = 0;
    processosCarregados = 10;

    opcao = menuShell();
    nop();
    while(opcao != 6){
        if(opcao == 1){
            msgLcd(17);
            processoAtual = input();
            processoAtual = processoAtual - 1;
            i = 0;
            podeRodar = 0;
            nop();
            nop();
            while(i<10){
                teste = programas[i];
                if(processoAtual == teste){
                    podeRodar = 1;
                    processoAtual = i;
                }
                else{
                    nop();
                }
                i = i + 1;
                nop();
            }
            nop();
            if(podeRodar == 0){
                nop();
                msgLcd(18);
                nop();
                nop();
                nop();
            }
            else{
                nop();
                msgLcd(12);
                salto = processos[processoAtual];
                msgLcd(processoAtual+1);
                saltoUser();
                msgLcd(12);
                salto = 0;
                nop();
            }
            nop();
        }
        else{
            nop();
        }
        nop();
        opcao = menuShell();
        nop();
    }
    nop();
    msgLcd(30);
    nop();
    nop();
    nop();
    halt();
}