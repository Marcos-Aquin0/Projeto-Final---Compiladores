Terminals unused in grammar

    LETTER
    POINT
    COMINIT
    COMEND
    WHITESPACE
    TAB
    ENTER
    ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | func_decl

    6 var_decl: spec_type ID SMC
    7         | spec_type ID OBRACKT NUM CBRACKT SMC

    8 spec_type: INT
    9          | VOID

   10 func_decl: spec_type ID OPAREN params CPAREN compound_decl

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: spec_type ID
   16      | spec_type ID OBRACKT CBRACKT

   17 compound_decl: OKEYS local_decl state_list CKEYS

   18 local_decl: local_decl var_decl
   19           | ε

   20 state_list: state_list statement
   21           | ε

   22 statement: expr_decl
   23          | compound_decl
   24          | select_decl
   25          | iter_decl
   26          | return_decl

   27 expr_decl: expr SMC
   28          | SMC

   29 select_decl: IF OPAREN expr CPAREN statement
   30            | IF OPAREN expr CPAREN statement ELSE statement

   31 iter_decl: WHILE OPAREN expr CPAREN statement

   32 return_decl: RETURN SMC
   33            | RETURN expr SMC

   34 expr: var ATRIB expr
   35     | simp_expr

   36 var: ID
   37    | ID OBRACKT expr CBRACKT

   38 simp_expr: sum_expr relational sum_expr
   39          | sum_expr

   40 relational: NQ
   41           | BT
   42           | BTE
   43           | LT
   44           | LTE
   45           | EQ

   46 sum_expr: sum_expr sum term
   47         | term

   48 sum: SUM
   49    | SUB

   50 term: term mult factor
   51     | factor

   52 mult: MULT
   53     | DIV

   54 factor: OPAREN expr CPAREN
   55       | var
   56       | activation
   57       | NUM

   58 activation: ID OPAREN args CPAREN

   59 args: arg_list
   60     | ε

   61 arg_list: arg_list COMMA expr
   62         | expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <ival> (258) 7 57
    ID <sval> (259) 6 7 10 15 16 36 37 58
    LETTER (260)
    ELSE (261) 30
    IF (262) 29 30
    INT (263) 8
    RETURN (264) 32 33
    VOID (265) 9 12
    WHILE (266) 31
    OPAREN (267) 10 29 30 31 54 58
    CPAREN (268) 10 29 30 31 54 58
    OKEYS (269) 17
    CKEYS (270) 17
    OBRACKT (271) 7 16 37
    CBRACKT (272) 7 16 37
    SUM (273) 48
    SUB (274) 49
    DIV (275) 53
    MULT (276) 52
    NQ (277) 40
    BT (278) 41
    BTE (279) 42
    LT (280) 43
    LTE (281) 44
    EQ (282) 45
    SMC (283) 6 7 27 28 32 33
    COMMA (284) 13 61
    ATRIB (285) 34
    POINT (286)
    COMINIT (287)
    COMEND (288)
    WHITESPACE (289)
    TAB (290)
    ENTER (291)
    ERROR (292)
    IFX (293)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program (40)
        on left: 1
        on right: 0
    decl_list (41)
        on left: 2 3
        on right: 1 2
    decl (42)
        on left: 4 5
        on right: 2 3
    var_decl (43)
        on left: 6 7
        on right: 4 18
    spec_type (44)
        on left: 8 9
        on right: 6 7 10 15 16
    func_decl (45)
        on left: 10
        on right: 5
    params (46)
        on left: 11 12
        on right: 10
    param_list (47)
        on left: 13 14
        on right: 11 13
    param (48)
        on left: 15 16
        on right: 13 14
    compound_decl (49)
        on left: 17
        on right: 10 23
    local_decl (50)
        on left: 18 19
        on right: 17 18
    state_list (51)
        on left: 20 21
        on right: 17 20
    statement (52)
        on left: 22 23 24 25 26
        on right: 20 29 30 31
    expr_decl (53)
        on left: 27 28
        on right: 22
    select_decl (54)
        on left: 29 30
        on right: 24
    iter_decl (55)
        on left: 31
        on right: 25
    return_decl (56)
        on left: 32 33
        on right: 26
    expr (57)
        on left: 34 35
        on right: 27 29 30 31 33 34 37 54 61 62
    var (58)
        on left: 36 37
        on right: 34 55
    simp_expr (59)
        on left: 38 39
        on right: 35
    relational (60)
        on left: 40 41 42 43 44 45
        on right: 38
    sum_expr (61)
        on left: 46 47
        on right: 38 39 46
    sum (62)
        on left: 48 49
        on right: 46
    term (63)
        on left: 50 51
        on right: 46 47 50
    mult (64)
        on left: 52 53
        on right: 50
    factor (65)
        on left: 54 55 56 57
        on right: 50 51
    activation (66)
        on left: 58
        on right: 56
    args (67)
        on left: 59 60
        on right: 58
    arg_list (68)
        on left: 61 62
        on right: 59 61


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    var_decl   go to state 6
    spec_type  go to state 7
    func_decl  go to state 8


State 1

    8 spec_type: INT •

    $default  reduce using rule 8 (spec_type)


State 2

    9 spec_type: VOID •

    $default  reduce using rule 9 (spec_type)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: decl_list •
    2 decl_list: decl_list • decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    decl       go to state 10
    var_decl   go to state 6
    spec_type  go to state 7
    func_decl  go to state 8


State 5

    3 decl_list: decl •

    $default  reduce using rule 3 (decl_list)


State 6

    4 decl: var_decl •

    $default  reduce using rule 4 (decl)


State 7

    6 var_decl: spec_type • ID SMC
    7         | spec_type • ID OBRACKT NUM CBRACKT SMC
   10 func_decl: spec_type • ID OPAREN params CPAREN compound_decl

    ID  shift, and go to state 11


State 8

    5 decl: func_decl •

    $default  reduce using rule 5 (decl)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 decl_list: decl_list decl •

    $default  reduce using rule 2 (decl_list)


State 11

    6 var_decl: spec_type ID • SMC
    7         | spec_type ID • OBRACKT NUM CBRACKT SMC
   10 func_decl: spec_type ID • OPAREN params CPAREN compound_decl

    OPAREN   shift, and go to state 12
    OBRACKT  shift, and go to state 13
    SMC      shift, and go to state 14


State 12

   10 func_decl: spec_type ID OPAREN • params CPAREN compound_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    spec_type   go to state 16
    params      go to state 17
    param_list  go to state 18
    param       go to state 19


State 13

    7 var_decl: spec_type ID OBRACKT • NUM CBRACKT SMC

    NUM  shift, and go to state 20


State 14

    6 var_decl: spec_type ID SMC •

    $default  reduce using rule 6 (var_decl)


State 15

    9 spec_type: VOID •
   12 params: VOID •

    CPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (spec_type)


State 16

   15 param: spec_type • ID
   16      | spec_type • ID OBRACKT CBRACKT

    ID  shift, and go to state 21


State 17

   10 func_decl: spec_type ID OPAREN params • CPAREN compound_decl

    CPAREN  shift, and go to state 22


State 18

   11 params: param_list •
   13 param_list: param_list • COMMA param

    COMMA  shift, and go to state 23

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param •

    $default  reduce using rule 14 (param_list)


State 20

    7 var_decl: spec_type ID OBRACKT NUM • CBRACKT SMC

    CBRACKT  shift, and go to state 24


State 21

   15 param: spec_type ID •
   16      | spec_type ID • OBRACKT CBRACKT

    OBRACKT  shift, and go to state 25

    $default  reduce using rule 15 (param)


State 22

   10 func_decl: spec_type ID OPAREN params CPAREN • compound_decl

    OKEYS  shift, and go to state 26

    compound_decl  go to state 27


State 23

   13 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    spec_type  go to state 16
    param      go to state 28


State 24

    7 var_decl: spec_type ID OBRACKT NUM CBRACKT • SMC

    SMC  shift, and go to state 29


State 25

   16 param: spec_type ID OBRACKT • CBRACKT

    CBRACKT  shift, and go to state 30


State 26

   17 compound_decl: OKEYS • local_decl state_list CKEYS

    $default  reduce using rule 19 (local_decl)

    local_decl  go to state 31


State 27

   10 func_decl: spec_type ID OPAREN params CPAREN compound_decl •

    $default  reduce using rule 10 (func_decl)


State 28

   13 param_list: param_list COMMA param •

    $default  reduce using rule 13 (param_list)


State 29

    7 var_decl: spec_type ID OBRACKT NUM CBRACKT SMC •

    $default  reduce using rule 7 (var_decl)


State 30

   16 param: spec_type ID OBRACKT CBRACKT •

    $default  reduce using rule 16 (param)


State 31

   17 compound_decl: OKEYS local_decl • state_list CKEYS
   18 local_decl: local_decl • var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (state_list)

    var_decl    go to state 32
    spec_type   go to state 33
    state_list  go to state 34


State 32

   18 local_decl: local_decl var_decl •

    $default  reduce using rule 18 (local_decl)


State 33

    6 var_decl: spec_type • ID SMC
    7         | spec_type • ID OBRACKT NUM CBRACKT SMC

    ID  shift, and go to state 35


State 34

   17 compound_decl: OKEYS local_decl state_list • CKEYS
   20 state_list: state_list • statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    OPAREN  shift, and go to state 41
    OKEYS   shift, and go to state 26
    CKEYS   shift, and go to state 42
    SMC     shift, and go to state 43

    compound_decl  go to state 44
    statement      go to state 45
    expr_decl      go to state 46
    select_decl    go to state 47
    iter_decl      go to state 48
    return_decl    go to state 49
    expr           go to state 50
    var            go to state 51
    simp_expr      go to state 52
    sum_expr       go to state 53
    term           go to state 54
    factor         go to state 55
    activation     go to state 56


State 35

    6 var_decl: spec_type ID • SMC
    7         | spec_type ID • OBRACKT NUM CBRACKT SMC

    OBRACKT  shift, and go to state 13
    SMC      shift, and go to state 14


State 36

   57 factor: NUM •

    $default  reduce using rule 57 (factor)


State 37

   36 var: ID •
   37    | ID • OBRACKT expr CBRACKT
   58 activation: ID • OPAREN args CPAREN

    OPAREN   shift, and go to state 57
    OBRACKT  shift, and go to state 58

    $default  reduce using rule 36 (var)


State 38

   29 select_decl: IF • OPAREN expr CPAREN statement
   30            | IF • OPAREN expr CPAREN statement ELSE statement

    OPAREN  shift, and go to state 59


State 39

   32 return_decl: RETURN • SMC
   33            | RETURN • expr SMC

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41
    SMC     shift, and go to state 60

    expr        go to state 61
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 40

   31 iter_decl: WHILE • OPAREN expr CPAREN statement

    OPAREN  shift, and go to state 62


State 41

   54 factor: OPAREN • expr CPAREN

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    expr        go to state 63
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 42

   17 compound_decl: OKEYS local_decl state_list CKEYS •

    $default  reduce using rule 17 (compound_decl)


State 43

   28 expr_decl: SMC •

    $default  reduce using rule 28 (expr_decl)


State 44

   23 statement: compound_decl •

    $default  reduce using rule 23 (statement)


State 45

   20 state_list: state_list statement •

    $default  reduce using rule 20 (state_list)


State 46

   22 statement: expr_decl •

    $default  reduce using rule 22 (statement)


State 47

   24 statement: select_decl •

    $default  reduce using rule 24 (statement)


State 48

   25 statement: iter_decl •

    $default  reduce using rule 25 (statement)


State 49

   26 statement: return_decl •

    $default  reduce using rule 26 (statement)


State 50

   27 expr_decl: expr • SMC

    SMC  shift, and go to state 64


State 51

   34 expr: var • ATRIB expr
   55 factor: var •

    ATRIB  shift, and go to state 65

    $default  reduce using rule 55 (factor)


State 52

   35 expr: simp_expr •

    $default  reduce using rule 35 (expr)


State 53

   38 simp_expr: sum_expr • relational sum_expr
   39          | sum_expr •
   46 sum_expr: sum_expr • sum term

    SUM  shift, and go to state 66
    SUB  shift, and go to state 67
    NQ   shift, and go to state 68
    BT   shift, and go to state 69
    BTE  shift, and go to state 70
    LT   shift, and go to state 71
    LTE  shift, and go to state 72
    EQ   shift, and go to state 73

    $default  reduce using rule 39 (simp_expr)

    relational  go to state 74
    sum         go to state 75


State 54

   47 sum_expr: term •
   50 term: term • mult factor

    DIV   shift, and go to state 76
    MULT  shift, and go to state 77

    $default  reduce using rule 47 (sum_expr)

    mult  go to state 78


State 55

   51 term: factor •

    $default  reduce using rule 51 (term)


State 56

   56 factor: activation •

    $default  reduce using rule 56 (factor)


State 57

   58 activation: ID OPAREN • args CPAREN

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    $default  reduce using rule 60 (args)

    expr        go to state 79
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56
    args        go to state 80
    arg_list    go to state 81


State 58

   37 var: ID OBRACKT • expr CBRACKT

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    expr        go to state 82
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 59

   29 select_decl: IF OPAREN • expr CPAREN statement
   30            | IF OPAREN • expr CPAREN statement ELSE statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    expr        go to state 83
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 60

   32 return_decl: RETURN SMC •

    $default  reduce using rule 32 (return_decl)


State 61

   33 return_decl: RETURN expr • SMC

    SMC  shift, and go to state 84


State 62

   31 iter_decl: WHILE OPAREN • expr CPAREN statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    expr        go to state 85
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 63

   54 factor: OPAREN expr • CPAREN

    CPAREN  shift, and go to state 86


State 64

   27 expr_decl: expr SMC •

    $default  reduce using rule 27 (expr_decl)


State 65

   34 expr: var ATRIB • expr

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    expr        go to state 87
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 66

   48 sum: SUM •

    $default  reduce using rule 48 (sum)


State 67

   49 sum: SUB •

    $default  reduce using rule 49 (sum)


State 68

   40 relational: NQ •

    $default  reduce using rule 40 (relational)


State 69

   41 relational: BT •

    $default  reduce using rule 41 (relational)


State 70

   42 relational: BTE •

    $default  reduce using rule 42 (relational)


State 71

   43 relational: LT •

    $default  reduce using rule 43 (relational)


State 72

   44 relational: LTE •

    $default  reduce using rule 44 (relational)


State 73

   45 relational: EQ •

    $default  reduce using rule 45 (relational)


State 74

   38 simp_expr: sum_expr relational • sum_expr

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    var         go to state 88
    sum_expr    go to state 89
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 75

   46 sum_expr: sum_expr sum • term

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    var         go to state 88
    term        go to state 90
    factor      go to state 55
    activation  go to state 56


State 76

   53 mult: DIV •

    $default  reduce using rule 53 (mult)


State 77

   52 mult: MULT •

    $default  reduce using rule 52 (mult)


State 78

   50 term: term mult • factor

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    var         go to state 88
    factor      go to state 91
    activation  go to state 56


State 79

   62 arg_list: expr •

    $default  reduce using rule 62 (arg_list)


State 80

   58 activation: ID OPAREN args • CPAREN

    CPAREN  shift, and go to state 92


State 81

   59 args: arg_list •
   61 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 93

    $default  reduce using rule 59 (args)


State 82

   37 var: ID OBRACKT expr • CBRACKT

    CBRACKT  shift, and go to state 94


State 83

   29 select_decl: IF OPAREN expr • CPAREN statement
   30            | IF OPAREN expr • CPAREN statement ELSE statement

    CPAREN  shift, and go to state 95


State 84

   33 return_decl: RETURN expr SMC •

    $default  reduce using rule 33 (return_decl)


State 85

   31 iter_decl: WHILE OPAREN expr • CPAREN statement

    CPAREN  shift, and go to state 96


State 86

   54 factor: OPAREN expr CPAREN •

    $default  reduce using rule 54 (factor)


State 87

   34 expr: var ATRIB expr •

    $default  reduce using rule 34 (expr)


State 88

   55 factor: var •

    $default  reduce using rule 55 (factor)


State 89

   38 simp_expr: sum_expr relational sum_expr •
   46 sum_expr: sum_expr • sum term

    SUM  shift, and go to state 66
    SUB  shift, and go to state 67

    $default  reduce using rule 38 (simp_expr)

    sum  go to state 75


State 90

   46 sum_expr: sum_expr sum term •
   50 term: term • mult factor

    DIV   shift, and go to state 76
    MULT  shift, and go to state 77

    $default  reduce using rule 46 (sum_expr)

    mult  go to state 78


State 91

   50 term: term mult factor •

    $default  reduce using rule 50 (term)


State 92

   58 activation: ID OPAREN args CPAREN •

    $default  reduce using rule 58 (activation)


State 93

   61 arg_list: arg_list COMMA • expr

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    OPAREN  shift, and go to state 41

    expr        go to state 97
    var         go to state 51
    simp_expr   go to state 52
    sum_expr    go to state 53
    term        go to state 54
    factor      go to state 55
    activation  go to state 56


State 94

   37 var: ID OBRACKT expr CBRACKT •

    $default  reduce using rule 37 (var)


State 95

   29 select_decl: IF OPAREN expr CPAREN • statement
   30            | IF OPAREN expr CPAREN • statement ELSE statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    OPAREN  shift, and go to state 41
    OKEYS   shift, and go to state 26
    SMC     shift, and go to state 43

    compound_decl  go to state 44
    statement      go to state 98
    expr_decl      go to state 46
    select_decl    go to state 47
    iter_decl      go to state 48
    return_decl    go to state 49
    expr           go to state 50
    var            go to state 51
    simp_expr      go to state 52
    sum_expr       go to state 53
    term           go to state 54
    factor         go to state 55
    activation     go to state 56


State 96

   31 iter_decl: WHILE OPAREN expr CPAREN • statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    OPAREN  shift, and go to state 41
    OKEYS   shift, and go to state 26
    SMC     shift, and go to state 43

    compound_decl  go to state 44
    statement      go to state 99
    expr_decl      go to state 46
    select_decl    go to state 47
    iter_decl      go to state 48
    return_decl    go to state 49
    expr           go to state 50
    var            go to state 51
    simp_expr      go to state 52
    sum_expr       go to state 53
    term           go to state 54
    factor         go to state 55
    activation     go to state 56


State 97

   61 arg_list: arg_list COMMA expr •

    $default  reduce using rule 61 (arg_list)


State 98

   29 select_decl: IF OPAREN expr CPAREN statement •
   30            | IF OPAREN expr CPAREN statement • ELSE statement

    ELSE  shift, and go to state 100

    $default  reduce using rule 29 (select_decl)


State 99

   31 iter_decl: WHILE OPAREN expr CPAREN statement •

    $default  reduce using rule 31 (iter_decl)


State 100

   30 select_decl: IF OPAREN expr CPAREN statement ELSE • statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    OPAREN  shift, and go to state 41
    OKEYS   shift, and go to state 26
    SMC     shift, and go to state 43

    compound_decl  go to state 44
    statement      go to state 101
    expr_decl      go to state 46
    select_decl    go to state 47
    iter_decl      go to state 48
    return_decl    go to state 49
    expr           go to state 50
    var            go to state 51
    simp_expr      go to state 52
    sum_expr       go to state 53
    term           go to state 54
    factor         go to state 55
    activation     go to state 56


State 101

   30 select_decl: IF OPAREN expr CPAREN statement ELSE statement •

    $default  reduce using rule 30 (select_decl)
